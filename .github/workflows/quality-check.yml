name: Quality check and testing

# Summary of the workflow
# For every push to the main branch or any pull request:
# 1. Run cargo clippy: Check linting to improve code quality.
# 2. Run cargo test: Run all Rust-based tests.
# 3. Run pytest: Build wheels and run Python tests.

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  clippy-lint:
    name: Lint code with Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

  run-rust-tests:
    name: Run all Rust tests
    needs: clippy-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo test
        run: cargo test

  run-python-tests:
    name: Build wheels and run Python tests
    needs: run-rust-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
        python: ["3.9", "3.10", "3.11"]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

      - name: Run tests
        run: pytest
